void merge(int arr[], int l, int m, int r) {
    int n1 = m + 1 - l, n2 = r - m, i, j, k;
    int L[n1], R[n2];
    for (i = 0; i < n1; ++i) L[i] = arr[l + i];
    for (j = 0; j < n2; ++j) R[j] = arr[m + 1 + j];
    i = j = 0, k = l;
    while (i < n1 && j < n2) {
        if (L[i] < R[j]) {
            arr[k] = L[i];
            ++i;
        } else {
            arr[k] = R[j];
            ++j;
        }
        ++k;
    }
    while (i < n1) arr[k] = L[i], ++k, ++i;
    while (j < n2) arr[k] = R[j], ++k, ++j;
}

void mergeSort(int arr[], int l, int r) {
    if (r > l) {
        int m = (l + r) >> 1;
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);
        merge(arr, l, m, r);
    }
}
