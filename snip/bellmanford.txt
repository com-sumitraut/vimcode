class Bellmanford {
    int n, m;
    vector <array<int, 3>> edge;
    vector<int> dis;

public:
    Bellmanford() {
        cin >> n >> m;
        edge.resize(m);
        dis.resize(n + 1, INT_MAX);
        for (auto &it : edge)
            cin >> it[0] >> it[1] >> it[2];
    }

    bool algo(int src) {
        dis[src] = 0;
        for (int i = 1; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                if (dis[edge[j][0]] != INT_MAX && dis[edge[j][0]] + edge[j][2] < dis[edge[j][1]]) {
                    dis[edge[j][1]] = dis[edge[j][0]] + edge[j][2];
                }
            }
        }
        for (int j = 0; j < m; ++j) {
            if (dis[edge[j][0]] != INT_MAX && dis[edge[j][0]] + edge[j][2] < dis[edge[j][1]]) {
                return 1;
            }
        }
        return 0;
    }
};
