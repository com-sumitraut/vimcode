int n, m, i, j, k, x[] = {-1, 1, 0, 0}, y[] = {0, 0, -1, 1};
char str[50][51];
bool vis[50][50];

bool ok(int r, int c) {
    return -1 < r && r < n && -1 < c && c < m;
}


bool solve() {
    cin >> n >> m;
    for (i = 0; i < n; ++i) cin >> str[i];

    queue <pair<int, int>> Qu;
    Qu.push(cur);
    while (!Qu.empty()) {
        auto cur = Qu.front();
        Qu.pop();
        vis[cur.first][cur.second] = 1;
        for (k = 0; k < 4; ++k) {
            pair<int, int> chld;
            chld.first = cur.first + x[k], chld.second = cur.second + y[k];
            if (ok(chld.first, chld.second) && !vis[r][c]) {

                Qu.push(chld);
            }
        }
    }
}
